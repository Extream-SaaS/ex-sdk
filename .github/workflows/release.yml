name: Ex-SDK release

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        id: Build
        uses: actions/setup-node@v1.4.3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN}}
      - run: npm ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN}}
      - run: npm run build
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN}}
      - run: npm audit --audit-level=moderate
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN}}
      - name: Test
        id: Test
        run: npm test
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN}}
      # - uses: TriPSs/conventional-changelog-action@v1.2.0
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     git-message: 'chore(release): {version}'
      #     preset: 'angular'
      #     tag-prefix: 'v'
      #     output-file: 'CHANGELOG.md'
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN}}
      # - name: Publish
      #   id: Publish
      #   run: npm publish
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN}}
      # - uses: act10ns/slack@v1
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   with:
      #     status: ${{ job.status }}
      #     steps: ${{ toJson(steps) }}
      #   if: always()