name: Ex-SDK release

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        id: Node
        uses: actions/setup-node@v1.4.3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm ci
        id: Install
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm run build
        id: Build
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm audit --audit-level=moderate
        id: Audit
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Test
        id: Test
        run: npm test
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      # Typedoc will not work if this file is present. Remove it here, regenerate the docs and then put it back.
      - name: Delete_config
        id: Delete_config
        run: rm ./docs/_config.yml
      - name: Generate_docs
        id: Generate_docs
        run: npm run docs
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      # Putting the file back see above comment.
      - name: Add_config
        id: Add_config
        run:  |
          echo "theme: jekyll-theme-cayman" >> ./docs/_config.yml
      - uses: TriPSs/conventional-changelog-action@v1.2.0
        id: Changelog
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-message: 'chore(release): {version}'
          preset: 'angular'
          tag-prefix: 'v'
          output-file: 'CHANGELOG.md'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish
        id: Publish
        run: npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: act10ns/slack@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
